#!/usr/bin/env ruby

require 'digest'

require_relative '../lib/base36'
require_relative '../lib/openssh'

def print_hex data
  data.bytesize.times do |i|
    byte = data[i].ord
    print '|  ' if (i) % 8 === 0
    print ((byte < 16 ? '0' : '') + byte.to_s(16)).upcase
    print ' '
    print ' ' if (i + 1) % 4 === 0
    print "|\n" if (i + 1) % 32 === 0
  end
end

if !ARGV[0]
  puts "shadns-id --- Get SHADNS domain identifier by OpenSSH key file"
  puts "Usage: shadns-id ~/.ssh/openssh_ed25519_key"
  exit
end

file_data = File.read(ARGV[0])
if ARGV[0][-4..] === '.pub'
  key = OpenSSH.parse_public_key(file_data)

  raise "Can't parse this file!" if !key
  raise "Can't use '#{key[:type]}' key!" if key[:type] != 'ed25519'

  sha256_public = Digest::SHA2.new(256).digest(key[:data])
  base36_sha256_public = Base36.from_str(sha256_public)
  puts base36_sha256_public
else
  key_pair = OpenSSH.parse_key_pair(file_data)
  
  raise "Can't parse this file!" if !key_pair
  raise "Can't use '#{key_pair[:type]}' key!" if key_pair[:type] != 'ed25519'

  sha256_public = Digest::SHA2.new(256).digest(key_pair[:public])
  base36_sha256_public = Base36.from_str(sha256_public)
  puts base36_sha256_public
end
